{"version":3,"sources":["App.js","component/DisplayBlock.js","component/Buttons.js","serviceWorker.js","index.js"],"names":["emitter","eventemitter","App","props","addNum","temp","num","state","displaytext","split","sum","parseFloat","setState","minusNum","multiplyNum","divisorNum","Number","toFixed","handleNumClick","e","lastOperation","lastChar","target","value","lastTwoChar","slice","length","alert","console","log","isNaN","dt","substring","eval","emitEvent","handleDelete","charAt","delteChar","toString","handleClear","handleCalculate","indexOf","addListener","this","alignContent","className","Component","React","DisplayBlock","Buttons","btnStyle","borderRadius","backgroundColor","onClick","style","color","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e6282285.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport DisplayBlock from './component/DisplayBlock'\nimport Buttons from './component/Buttons'\nimport eventemitter from 'wolfy87-eventemitter'\n\nlet emitter = new eventemitter();\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lastOperation: '',\n      displaytext: '0',\n      lastChar: ''\n    };\n  }\n\n  componentDidMount() {\n    emitter.addListener('add', this.addNum);\n    emitter.addListener('minus', this.minusNum);\n    emitter.addListener('multiply', this.multiplyNum);\n    emitter.addListener('divisor', this.divisorNum);\n  }\n\n  addNum = (temp) => {\n    const num = this.state.displaytext.split('+');\n    const sum = parseFloat(num[0]) + parseFloat(num[1]);\n    this.setState({ displaytext: sum + temp })\n  }\n\n  minusNum = (temp) => {\n    const num = this.state.displaytext.split('-');\n    const sum = parseFloat(num[0]) - parseFloat(num[1]);\n    this.setState({ displaytext: sum + temp })\n  }\n\n  multiplyNum = (temp) => {\n    const num = this.state.displaytext.split('*');\n    const sum = parseFloat(num[0]) * parseFloat(num[1]);\n    this.setState({ displaytext: sum + temp })\n  }\n\n  divisorNum = (temp) => {\n    const num = this.state.displaytext.split('/');\n    let sum = parseFloat(num[0]) / parseFloat(num[1]);\n    sum = Number(parseFloat(temp).toFixed(10));\n    this.setState({ displaytext: sum + temp })\n  }\n\n  handleNumClick = (e) => {\n    const lastOperation = this.state.lastOperation;\n    const lastChar = this.state.lastChar;\n    const displaytext = this.state.displaytext;\n    const temp = e.target.value;\n    const lastTwoChar = displaytext.slice(displaytext.length - 2);\n\n    if (displaytext.length > 12) { //輸入過多\n      return alert(\"too much\")\n    }\n\n    if (lastOperation !== '' && lastChar === '0') { //運算元後的0 除錯\n      if (lastTwoChar === '.0' || lastTwoChar === '00') {\n        console.log('沒事')\n      } else if (!isNaN(temp)) {\n        let dt = displaytext.substring(0, displaytext.length - 1) + temp\n        this.setState({ displaytext: dt })\n        return this.state.lastChar = temp\n      }\n    }\n\n    if (isNaN(temp)) {   //輸入符號檢查\n      if (isNaN(lastChar)) //雙重符號\n        return alert('double symbol');\n      if (temp === '.') {  //雙重小數\n        try {\n          isNaN(eval(this.state.displaytext + \".\"))\n        }\n        catch (e) {\n          return alert('double dot');\n        }\n      }\n\n      if (temp === '%') {\n        this.setState({ displaytext: this.state.displaytext / 100 })\n        return\n      } else if (lastOperation === '' || temp === '.')\n        this.setState({ displaytext: this.state.displaytext + temp });\n      else {\n        if (lastOperation === '+')\n          emitter.emitEvent('add', [temp]);\n        if (lastOperation === '-')\n          emitter.emitEvent('minus', [temp]);\n        if (lastOperation === '*')\n          emitter.emitEvent('multiply', [temp]);\n        if (lastOperation === '/')\n          emitter.emitEvent('divisor', [temp]);\n      }\n      if (temp !== \".\") this.state.lastOperation = temp;\n    }\n\n    if (!isNaN(temp) && this.state.displaytext === '0') //輸入數字的檢查\n      this.setState({ displaytext: temp })\n    else if (!isNaN(temp))\n      this.setState({ displaytext: this.state.displaytext + temp })\n\n    this.state.lastChar = temp;\n\n  }\n\n  handleDelete = () => {\n    const displaytext = this.state.displaytext;\n    const lastChar = displaytext.charAt(displaytext.length - 2)\n    const delteChar = displaytext.charAt(displaytext.length - 1)\n    if (delteChar === '+' || delteChar === '-' || delteChar === '/' || delteChar === '*')\n      this.setState({ lastOperation: \"\" })\n\n    let temp = this.state.displaytext.toString().slice(0, -1);\n\n    this.state.displaytext.toString().length === 1 ?\n      this.setState({ displaytext: '0' }) :\n      this.setState({ displaytext: temp })\n    this.state.lastChar = lastChar\n  }\n\n  handleClear = () => {\n    this.state.lastOperation = '';\n    this.state.lastChar = '';\n    this.setState({ displaytext: '0' })\n  }\n\n  handleCalculate = () => {\n    let temp = eval(this.state.displaytext.toString());\n    if (temp.toString().indexOf('.') == true) {\n      temp = Number(parseFloat(temp).toFixed(10));\n    }\n    this.setState({ displaytext: temp.toString() })\n    this.state.lastOperation = '';\n    this.state.lastChar = '';\n  }\n\n  render() {\n    return (\n      <div alignContent=\"center\">\n        <div className='FirstContainer' >\n          <DisplayBlock Component={this.state.displaytext} />\n          <Buttons handleCalculate={this.handleCalculate} handleClear={this.handleClear} handleDelete={this.handleDelete} handleNumClick={this.handleNumClick} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\n\r\n\r\nclass DisplayBlock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {  };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='DisplayBlock' >\r\n      {this.props.Component}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayBlock;","import React, { Component } from 'react';\r\n\r\nclass Buttons extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  \r\n  btnStyle = {\r\n    borderRadius: '5rem',\r\n    backgroundColor: 'rgb(255, 123, 0)'\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n        <div className='OperationTopBtn' >\r\n          <button className='Btn' onClick={this.props.handleClear} style={{ borderRadius: '5rem', backgroundColor: 'white', color: 'red' }}>C</button>\r\n          <button className='Btn' onClick={this.props.handleNumClick} value='%' style={this.btnStyle}>%</button>\r\n          <button className='Btn' onClick={this.props.handleNumClick} value='/' style={this.btnStyle}>/</button>\r\n          <button className='Btn' onClick={this.props.handleNumClick} value='*' style={this.btnStyle}>X</button>\r\n        </div>\r\n        <div className='SecondContainer' >\r\n          <div className='NumBtnDiv'>\r\n            <div className='NumBtnInColumn'>\r\n              <button className='Btn' onClick={this.props.handleNumClick} value='1'>1</button>\r\n              <button className='Btn' onClick={this.props.handleNumClick} value='2'>2</button>\r\n              <button className='Btn' onClick={this.props.handleNumClick} value='3'>3</button>\r\n            </div>\r\n\r\n            <div className='NumBtnInColumn'>\r\n              <button className='Btn' onClick={this.props.handleNumClick} value='4'>4</button>\r\n              <button className='Btn' onClick={this.props.handleNumClick} value='5'>5</button>\r\n              <button className='Btn' onClick={this.props.handleNumClick} value='6'>6</button>\r\n            </div>\r\n\r\n            <div className='NumBtnInColumn'>\r\n              <button className='Btn' onClick={this.props.handleNumClick} value='7'>7</button>\r\n              <button className='Btn' onClick={this.props.handleNumClick} value='8'>8</button>\r\n              <button className='Btn' onClick={this.props.handleNumClick} value='9'>9</button>\r\n            </div>\r\n\r\n            <div className='NumBtnInColumn' >\r\n              <button onClick={this.props.handleDelete} className='Btn' style={{ backgroundColor: 'rgb(52, 56, 106)' ,borderRadius:'5rem'}} >←</button>\r\n              <button onClick={this.props.handleNumClick} className='Btn' value='0'>0</button>\r\n              <button onClick={this.props.handleNumClick} className='Btn' value='.'>．</button>\r\n            </div>\r\n\r\n\r\n          </div>\r\n          <div className='OperationRigthBtn'>\r\n            <div className='OperationRigthBtnPM'>\r\n              <button className='Btn' onClick={this.props.handleNumClick} value='+' style={this.btnStyle} >+</button>\r\n              <button className='Btn' onClick={this.props.handleNumClick} value='-' style={this.btnStyle} >-</button>\r\n            </div>\r\n\r\n            <button className='BigEnter' onClick={this.props.handleCalculate} >=</button>\r\n\r\n\r\n          </div>\r\n        </div>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Buttons;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}